// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}


datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String
  password      String
  role          String    // ADMIN, TUTOR, or STUDENT
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  tutor         Tutor?
  student       Student?
}

model Tutor {
  id            String    @id @default(cuid())
  userId        String    @unique
  user          User      @relation(fields: [userId], references: [id])
  bio           String?
  qualifications String   // Stored as JSON string
  subjects      String    // Stored as JSON string
  experience    Int       @default(0)
  hourlyRate    Float
  availability  String?   // Stored as JSON string
  isVerified    Boolean   @default(false)
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Student {
  id            String    @id @default(cuid())
  userId        String    @unique
  user          User      @relation(fields: [userId], references: [id])
  grade         String
  curriculum    String    // IGCSE or IB
  subjects      String    // Stored as JSON string
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  sessions      Session[]
  tutorRequests TutorRequest[]
}

model Session {
  id            String    @id @default(cuid())
  tutorId       String
  tutor         Tutor     @relation(fields: [tutorId], references: [id])
  studentId     String
  student       Student   @relation(fields: [studentId], references: [id])
  startTime     DateTime
  endTime       DateTime
  status        String    // PENDING, CONFIRMED, COMPLETED, or CANCELLED
  notes         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model TutorRequest {
  id                  String    @id @default(cuid())
  requesterName       String    @default("")
  requesterEmail      String    @default("")
  requesterPhone      String    @default("")
  requesterRole       String    @default("")
  studentName         String    @default("")
  studentGender       String    @default("")
  studentSchool       String?
  studentGrade        String    @default("")
  subjects            String    @default("[]") // Stored as JSON string
  curriculum          String    // IGCSE or IB
  preferredFrequency  String    @default("")
  preferredDuration   String    @default("")
  preferredTutorType  String    @default("")
  address             String    @default("")
  additionalNotes     String?
  status              String    @default("PENDING") // PENDING, CONTACTED, MATCHED, or CLOSED
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  student             Student   @relation(fields: [studentId], references: [id])
  studentId           String
} 